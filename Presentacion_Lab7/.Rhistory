new_fecha
synodic = days(29) + hours(12) + minutes(44) + seconds(3)
saros = 223 * synodic
fecha_origen = mdy_hms("August 21, 2017, 18:26:40", tz = "UTC")
new_fecha = fecha_origen + saros
new_fecha
synodic = days(29) + hours(12) + minutes(44) + seconds(3)
saros = 223 * synodic
fecha_origen = mdy_hms("August 21, 2017, 18:26:40", tz = "UTC")
new_fecha = fecha_origen + saros
new_fecha
saros
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(readxl)
data = read_xlsx("H:/My Drive/Universidad/6to. Semestre/Data Wrangling/Lab5/data.xlsx")
View(data)
data$Fecha Creación
View(data)
data$names = tolower(data$names)
View(data)
names(data)
names(data) = tolower(names(data))
View(data)
names(data) = tolower(names(data))
names(data) = replace(names(data)," ","_")
View(data)
names(data) = tolower(names(data))
gsub("ó", "o", names(data))
names(data) = tolower(names(data))
gsub("ó", "o", names(data))
gsub(" ", "_", names(data))
names(data) = tolower(names(data))
names(data) = gsub("ó", "o", names(data))
names(data) = gsub(" ", "_", names(data))
View(data)
View(data)
View(data)
as.Date(data$fecha_creacion[1])
typeof(data$fecha_creacion[1])
as.Date(as.numeric(data$fecha_creacion[1]))
as.Date(as.numeric(data$fecha_creacion[1]), origin = "1899-12-31")
day(as.Date(as.numeric(data$fecha_creacion[1]), origin = "1899-12-31"))
day(as.Date(as.numeric(data$fecha_creacion[1]), origin = "1899-12-31")-day(1))
day(as.Date(as.numeric(data$fecha_creacion[1]), origin = "1899-12-31")-day(1, origin = "1899-12-31"))
day(as.Date(as.numeric(data$fecha_creacion[1]) - day(1), origin = "1899-12-31"))
day(as.Date(as.numeric(data$fecha_creacion[1]) - day(1), origin = "1899-12-31"))
data$fecha_creacion[2]
data$fecha_creacion[1]
strftime(data$fecha_creacion[1],format = "%Y-%m-%d")
strftime(data$fecha_creacion[2],format = "%Y-%m-%d")
strftime(data$fecha_creacion[2],format = "%d-%m-%Y")
strftime(data$fecha_creacion[2],format = "%d-%m-YY")
strftime(data$fecha_creacion[2],format = "%d-%m-%YY")
strftime(data$fecha_creacion[2],format = "%d-%m-%Y")
strftime(data$fecha_creacion[2],format = "%d-%m-%y")
temp = strftime(data$fecha_creacion[2],format = "%d-%m-%y")
typeof(temp)
typeof(data$fecha_creacion[1])
typeof(data$fecha_creacion[2])
nchar(data$fecha_creacion[1])
nchar(data$fecha_creacion[2])
as.Date(data$fecha_creacion, format = "%m-%d-%y", tryFormats = c("%m-%d-%y"))
as.Date(data$fecha_creacion, format = "%m-%d-%y")
View(data)
as.Date(data$fecha_creacion, format = "%d-%m-%y")
as.Date(data$fecha_creacion, format = "%d-%m-%y")
ymd(data$fecha_creacion[1])
as.Date(data$fecha_creacion, format = "%d-%m-%y")
ymd(data$fecha_creacion[1], origin = "1899-12-31")
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(readxl)
library(nycflights13)
library(tidyverse)
library(stringr)
library(ggplot2)
data = read_xlsx("data.xlsx")
names(data) = tolower(names(data))
names(data) = gsub("ó", "o", names(data))
names(data) = gsub(" ", "_", names(data))
#Fechas de Creacion
data <- data %>%
mutate(fechaF1 = as.Date(as.numeric(fecha_creacion), origin ="1899-12-30"))
data <- data %>%
mutate(fechaF2 = dmy(fecha_creacion))
data <- data %>%
mutate(fecha = paste(fechaF1,fechaF2,sep=""))
data <- data %>%
mutate(fecha = gsub("NA","",fecha))
data <- data %>%
mutate(fecha = ymd(fecha))
data <- data %>%
mutate(fecha_creacion = make_datetime(year(fecha),
month(fecha),
day(fecha),
hour(hora_creacion),
minute(hora_creacion),
second(hora_creacion)))
data <- data %>%
select(-c("fecha", "fechaF1", "fechaF2", "hora_creacion"))
data <- data %>%
mutate(fechaF1 = as.Date(as.numeric(fecha_final), origin ="1899-12-30"))
data <- data %>%
mutate(fechaF2 = dmy(fecha_final))
data <- data %>%
mutate(fecha = paste(fechaF1,fechaF2,sep=""))
data <- data %>%
mutate(fecha = gsub("NA","",fecha))
data <- data %>%
mutate(fecha = ymd(fecha))
data <- data %>%
mutate(dia = day(hora_final))
data <- data %>%
mutate(fecha = case_when(dia == 1 ~ fecha + ddays(x=1),
dia == 31 ~ fecha))
data <- data %>%
mutate(fecha_final = make_datetime(year(fecha),
month(fecha),
day(fecha),
hour(hora_final),
minute(hora_final),
second(hora_final)))
data <- data %>%
select(-c("fecha", "fechaF1", "fechaF2", "hora_final", "dia"))
View(data)
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(readxl)
library(nycflights13)
library(tidyverse)
library(stringr)
library(ggplot2)
data = read_xlsx("data.xlsx")
View(data)
names(data) = tolower(names(data))
names(data) = gsub("ó", "o", names(data))
names(data) = gsub(" ", "_", names(data))
#Fechas de Creacion
data <- data %>%
mutate(fechaF1 = as.Date(as.numeric(fecha_creacion), origin ="1899-12-30"))
data <- data %>%
mutate(fechaF2 = dmy(fecha_creacion))
data <- data %>%
mutate(fecha = paste(fechaF1,fechaF2,sep=""))
data <- data %>%
mutate(fecha = gsub("NA","",fecha))
data <- data %>%
mutate(fecha = ymd(fecha))
data <- data %>%
mutate(fecha_creacion = make_datetime(year(fecha),
month(fecha),
day(fecha),
hour(hora_creacion),
minute(hora_creacion),
second(hora_creacion)))
data <- data %>%
select(-c("fecha", "fechaF1", "fechaF2", "hora_creacion"))
data <- data %>%
mutate(fechaF1 = as.Date(as.numeric(fecha_final), origin ="1899-12-30"))
data <- data %>%
mutate(fechaF2 = dmy(fecha_final))
data <- data %>%
mutate(fecha = paste(fechaF1,fechaF2,sep=""))
data <- data %>%
mutate(fecha = gsub("NA","",fecha))
data <- data %>%
mutate(fecha = ymd(fecha))
data <- data %>%
mutate(dia = day(hora_final))
data <- data %>%
mutate(fecha = case_when(dia == 1 ~ fecha + ddays(x=1),
dia == 31 ~ fecha))
data <- data %>%
mutate(fecha_final = make_datetime(year(fecha),
month(fecha),
day(fecha),
hour(hora_final),
minute(hora_final),
second(hora_final)))
data <- data %>%
select(-c("fecha", "fechaF1", "fechaF2", "hora_final", "dia"))
View(data)
preg <- data %>%
mutate(mes = month(fecha_creacion)) %>%
filter(call == 1) %>%
select(mes, cod) %>%
group_by(mes,cod) %>%
summarise(cantidad = n()) %>%
arrange(desc(cantidad))
head(preg)
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
preg
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
kpss.test(preg[,2], null ="Trend") #si p>0.05 es estacionaria
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(readxl)
library(nycflights13)
library(tidyverse)
library(stringr)
library(ggplot2)
library(tseries)
data = read_xlsx("data.xlsx")
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
View(preg)
?ts
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())\
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
knitr::opts_chunk$set(echo = TRUE)
library(lubridate)
library(readxl)
library(nycflights13)
library(tidyverse)
library(stringr)
library(ggplot2)
library(tseries)
data = read_xlsx("data.xlsx")
names(data) = tolower(names(data))
names(data) = gsub("ó", "o", names(data))
names(data) = gsub(" ", "_", names(data))
#Fechas de Creacion
data <- data %>%
mutate(fechaF1 = as.Date(as.numeric(fecha_creacion), origin ="1899-12-30"))
data <- data %>%
mutate(fechaF2 = dmy(fecha_creacion))
data <- data %>%
mutate(fecha = paste(fechaF1,fechaF2,sep=""))
data <- data %>%
mutate(fecha = gsub("NA","",fecha))
data <- data %>%
mutate(fecha = ymd(fecha))
data <- data %>%
mutate(fecha_creacion = make_datetime(year(fecha),
month(fecha),
day(fecha),
hour(hora_creacion),
minute(hora_creacion),
second(hora_creacion)))
data <- data %>%
select(-c("fecha", "fechaF1", "fechaF2", "hora_creacion"))
data <- data %>%
mutate(fechaF1 = as.Date(as.numeric(fecha_final), origin ="1899-12-30"))
data <- data %>%
mutate(fechaF2 = dmy(fecha_final))
data <- data %>%
mutate(fecha = paste(fechaF1,fechaF2,sep=""))
data <- data %>%
mutate(fecha = gsub("NA","",fecha))
data <- data %>%
mutate(fecha = ymd(fecha))
data <- data %>%
mutate(dia = day(hora_final))
data <- data %>%
mutate(fecha = case_when(dia == 1 ~ fecha + ddays(x=1),
dia == 31 ~ fecha))
data <- data %>%
mutate(fecha_final = make_datetime(year(fecha),
month(fecha),
day(fecha),
hour(hora_final),
minute(hora_final),
second(hora_final)))
data <- data %>%
select(-c("fecha", "fechaF1", "fechaF2", "hora_final", "dia"))
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
kpss.test(preg[,2], null ="Trend") #si p>0.05 es estacionaria
View(preg)
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
typeof(preg)
kpss.test(preg[,2], null ="Trend") #si p>0.05 es estacionaria
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
preg = unlist(preg)
kpss.test(preg[,2], null ="Trend") #si p>0.05 es estacionaria
?kpss.test
preg
preg <- data %>%
filter(call == 1) %>%
mutate(semana = floor_date(fecha_creacion, unit = "week")) %>%
group_by(semana) %>%
summarise(conteo = n())
preg = data.frame(preg)
preg
kpss.test(preg[,2], null ="Trend") #si p>0.05 es estacionaria
#No es estacionaria por poco
plumber::plumb(file='C:/Users/danie/Desktop/DataProduct-2022/Plumber/Lab2/Lab2.R')$run()
plumber::plumb(file='C:/Users/danie/Desktop/DataProduct-2022/Plumber/Lab2/Lab2.R')$run()
fit <- readRDS(gzcon(url("https://github.com/dan-behar/DataProduct-2022/blob/main/Plumber/modelo_entrenado.rds")))
fit <-gzcon(url("https://github.com/dan-behar/DataProduct-2022/blob/main/Plumber/modelo_entrenado.rds"))
fit
fit <-gzcon(url("https://github.com/dan-behar/DataProduct-2022/blob/main/Plumber/modelo_entrenado.rds?raw=true"))
fit <- gzcon(url("https://github.com/dan-behar/DataProduct-2022/blob/main/Plumber/modelo_entrenado.rds?raw=true"))
fit
fit <- readRDS(gzcon(url("https://github.com/dan-behar/DataProduct-2022/blob/main/Plumber/modelo_entrenado.rds?raw=true")))
View(fit)
plumber::plumb(file='C:/Users/danie/Desktop/DataProduct-2022/Plumber/modelos_api.R')$run()
shiny::runApp('C:/Users/danie/Desktop/DataProduct-2022/Shiny/dt_tablas')
library(dplyr)
library(highcharter)
library(lubridate)
library(corrplot)
library(ggplot2)
library(GGally)
library(Hmisc)
library(corrplot)
library(PerformanceAnalytics)
require(plotly)
setwd("C:/Users/danie/Desktop/DataWrangling-2022/Presentacion_Lab7")
data = read.csv("c1.csv")
#---------------Limpieza de data---------------
data = data[-c(23,24,25,26,27,28)]
names(data) = tolower(names(data))
names(data) = gsub("_5", "", names(data))
names(data) = gsub("x", "", names(data))
data = data %>% mutate(
camion = gsub("Q", "",camion),
camion = gsub("-", 0,camion),
pickup = gsub("Q", "",pickup),
pickup = gsub("-", 0,pickup),
moto = gsub("Q", "",moto),
moto = gsub("-", 0,moto),
directocamion = gsub("Q", "",directocamion),
directocamion = gsub("-", 0,directocamion),
directopickup = gsub("Q", "",directopickup),
directopickup = gsub("-", 0,directopickup),
directomoto = gsub("Q", "",directomoto),
directomoto = gsub("-", 0,directomoto),
fijocamion = gsub("Q", "",fijocamion),
fijocamion = gsub("-", 0,fijocamion),
fijopickup = gsub("Q", "",fijopickup),
fijopickup = gsub("-", 0,fijopickup),
fijomoto = gsub("Q", "",fijomoto),
fijomoto = gsub("-", 0,fijomoto),
factura = gsub("Q", "", factura)
)
data$fecha = dmy(data$fecha)
data$factura = as.numeric(data$factura)
data$camion = as.numeric(data$camion)
data$pickup = as.numeric(data$pickup)
data$moto = as.numeric(data$moto)
data$directocamion = as.numeric(data$directocamion)
data$directopickup = as.numeric(data$directopickup)
data$directomoto = as.numeric(data$directomoto)
data$fijocamion = as.numeric(data$fijocamion)
data$fijopickup = as.numeric(data$fijopickup)
data$fijomoto = as.numeric(data$fijomoto)
data$lat = as.numeric(data$lat)
data$long = as.numeric(data$long)
data$height = as.numeric(data$height)
data$origen = as.factor(data$origen)
data <- data %>%
mutate(costo_clasificado = (camion + pickup + moto))
data <- data %>%
mutate(marge_venta = (factura - (camion + pickup + moto)))
data2 <- data %>% arrange(data$fecha)
highchart(type = "stock") %>%
hc_add_series(data2$factura, type = "line")
highchart(type = "stock") %>%
hc_add_series(data2$costo_clasificado, type = "line")
highchart(type = "stock") %>%
hc_add_series(data2$marge_venta, type = "line")
ggplot(facturas, aes(x=cod)) + geom_histogram()
#Mejores facturas por sector
facturas = data %>%
select(factura, cod) %>%
group_by(cod) %>%
summarise(cantidad = n()) %>%
arrange(desc(cantidad))
ggplot(facturas, aes(x=cod)) + geom_histogram()
ggplot(facturas, aes(x = cod, y = cantidad)) + geom_histogram()
ggplot(facturas, aes(x = cod)) + geom_histogram()
ggplot(facturas, aes(x = cod)) + geom_bar()
ggplot(facturas, aes(x = cod, y = cantidad)) + geom_bar()
ggplot(facturas, aes(x = cod, y = cantidad)) + geom_bar(stat = "identity")
ggplot(facturas, aes(x = cod, y = cantidad)) + geom_bar(color = "red", stat = "identity")
ggplot(facturas, aes(x = cod, y = cantidad)) + geom_bar(color = "red",
fill = "red", stat = "identity")
data %>%
select(factura, cod) %>%
group_by(cod) %>%
summarise(cantidad = n()) %>%
arrange(desc(cantidad))
marginacion = (data$marge_venta/data$factura)
mean(marginacion)
highchart(type = "stock") %>%
hc_add_series(data2$factura, type = "line")
marginacion = (data$marge_venta/data$factura)
ggplot(facturas, aes(x = cod, y = cantidad)) + geom_bar(color = "red",
fill = "red", stat = "identity")
mean(marginacion)
highchart(type = "stock") %>%
hc_add_series(data2$factura, type = "line")
highchart(type = "stock") %>%
hc_add_series(data2$costo_clasificado, type = "line")
setwd("C:/Users/danie/Desktop/DataWrangling-2022/Presentacion_Lab7")
library(dplyr)
library(highcharter)
library(lubridate)
library(corrplot)
library(ggplot2)
library(GGally)
library(Hmisc)
library(corrplot)
library(PerformanceAnalytics)
require(plotly)
data = read.csv("c1.csv")
#---------------Limpieza de data---------------
data = data[-c(23,24,25,26,27,28)]
names(data) = tolower(names(data))
names(data) = gsub("_5", "", names(data))
names(data) = gsub("x", "", names(data))
data = data %>% mutate(
camion = gsub("Q", "",camion),
camion = gsub("-", 0,camion),
pickup = gsub("Q", "",pickup),
pickup = gsub("-", 0,pickup),
moto = gsub("Q", "",moto),
moto = gsub("-", 0,moto),
directocamion = gsub("Q", "",directocamion),
directocamion = gsub("-", 0,directocamion),
directopickup = gsub("Q", "",directopickup),
directopickup = gsub("-", 0,directopickup),
directomoto = gsub("Q", "",directomoto),
directomoto = gsub("-", 0,directomoto),
fijocamion = gsub("Q", "",fijocamion),
fijocamion = gsub("-", 0,fijocamion),
fijopickup = gsub("Q", "",fijopickup),
fijopickup = gsub("-", 0,fijopickup),
fijomoto = gsub("Q", "",fijomoto),
fijomoto = gsub("-", 0,fijomoto),
factura = gsub("Q", "", factura)
)
data$fecha = dmy(data$fecha)
data$factura = as.numeric(data$factura)
data$camion = as.numeric(data$camion)
data$pickup = as.numeric(data$pickup)
data$moto = as.numeric(data$moto)
data$directocamion = as.numeric(data$directocamion)
data$directopickup = as.numeric(data$directopickup)
data$directomoto = as.numeric(data$directomoto)
data$fijocamion = as.numeric(data$fijocamion)
data$fijopickup = as.numeric(data$fijopickup)
data$fijomoto = as.numeric(data$fijomoto)
data$lat = as.numeric(data$lat)
data$long = as.numeric(data$long)
data$height = as.numeric(data$height)
data$origen = as.factor(data$origen)
data <- data %>%
mutate(costo_clasificado = (camion + pickup + moto))
data <- data %>%
mutate(marge_venta = (factura - (camion + pickup + moto)))
data2 <- data %>% arrange(data$fecha)
#Tarifas promedio del 2017 por unidad
camiones = data.frame(data$camion,data$factura)
camiones = camiones %>% mutate(data.camion = na_if(camiones$data.camion,0))
camiones = camiones[!is.na(camiones$data.camion),]
pickups = data.frame(data$pickup,data$factura)
pickups = pickups %>% mutate(data.pickup = na_if(pickups$data.pickup,0))
pickups = pickups[!is.na(pickups$data.pickup),]
motos = data.frame(data$moto,data$factura)
motos = motos %>% mutate(data.moto = na_if(motos$data.moto,0))
motos = motos[!is.na(motos$data.moto),]
summary(camiones)
summary(pickups)
summary(motos)
